# ArcGIS to MBTiles with MGRS Grid - Python Dependencies
# Install with: pip install -r requirements.txt

# ==================================================
# CORE DEPENDENCIES
# ==================================================

# Python packaging utilities (required by mgrs)
packaging>=21.0

# Image processing and manipulation
Pillow>=9.0.0

# Tile math and coordinate transformations
mercantile>=1.2.0

# Military Grid Reference System (MGRS) coordinate conversion
mgrs>=1.4.0

# Coordinate reference system transformations
pyproj>=3.3.0

# HTTP requests for downloading tiles
requests>=2.28.0

# ==================================================
# SYSTEM DEPENDENCIES
# ==================================================

# Enhanced SSL support (recommended for Windows)
certifi>=2022.0.0

# Character encoding detection (dependency of requests)
charset-normalizer>=3.0.0

# Internationalized domain names (dependency of requests)
idna>=3.0

# HTTP library (dependency of requests)
urllib3>=1.26.0

# Click library (dependency of mercantile)
click>=8.0.0

# ==================================================
# PYTHON STANDARD LIBRARY DEPENDENCIES
# ==================================================
# These are included with Python but listed for completeness:
# - json (built-in)
# - argparse (built-in)
# - logging (built-in)
# - sqlite3 (built-in)
# - os (built-in)
# - sys (built-in)
# - math (built-in)
# - time (built-in)
# - concurrent.futures (built-in, Python 3.2+)
# - typing (built-in, Python 3.5+)
# - dataclasses (built-in, Python 3.7+)
# - io (built-in)

# ==================================================
# OPTIONAL ENHANCEMENTS
# ==================================================

# Progress bars (uncomment to enable beautiful progress bars)
# tqdm>=4.64.0

# Better JSON handling (uncomment for faster JSON processing)
# ujson>=5.0.0

# Colorful terminal output (uncomment for colored logging)
# colorama>=0.4.0

# Better datetime handling (uncomment if extending with time features)
# python-dateutil>=2.8.0

# Geographic data processing (uncomment for advanced geo features)
# geopandas>=0.12.0
# shapely>=1.8.0

# ==================================================
# DEVELOPMENT DEPENDENCIES (uncomment for development)
# ==================================================

# Code formatting
# black>=22.0.0

# Linting
# flake8>=5.0.0

# Type checking
# mypy>=0.991

# Testing
# pytest>=7.0.0
# pytest-cov>=4.0.0

# ==================================================
# PLATFORM-SPECIFIC NOTES
# ==================================================

# Windows Users:
# - If you encounter issues with pyproj, try: pip install --upgrade pyproj
# - Alternative: conda install pyproj (if using Anaconda/Miniconda)
# - GDAL dependency issues: pip install --find-links https://girder.github.io/large_image_wheels GDAL

# Linux Users:
# - May need system packages: sudo apt-get install python3-dev libgdal-dev
# - For Ubuntu/Debian: sudo apt-get install proj-bin libproj-dev

# macOS Users:
# - May need: brew install proj gdal
# - If using M1/M2 Mac: conda install pyproj (recommended over pip)

# ==================================================
# MINIMUM PYTHON VERSION
# ==================================================
# Requires Python 3.7+ for:
# - dataclasses (3.7+)
# - typing annotations (3.5+)
# - concurrent.futures (3.2+)
# - pathlib (3.4+)

# ==================================================
# INSTALLATION COMMANDS
# ==================================================

# Standard installation:
# pip install -r requirements.txt

# Upgrade all packages:
# pip install -r requirements.txt --upgrade

# Install with pre-compiled wheels (faster, recommended for Windows):
# pip install -r requirements.txt --only-binary=all

# Install in virtual environment (recommended):
# python -m venv venv
# venv\Scripts\activate (Windows) or source venv/bin/activate (Linux/Mac)
# pip install -r requirements.txt

# Conda installation (alternative):
# conda install --file requirements.txt

# ==================================================
# VERIFICATION
# ==================================================

# Test imports after installation:
# python -c "import PIL, mercantile, mgrs, pyproj, requests, packaging; print('All packages imported successfully!')"

# Check versions:
# pip list | grep -E "(Pillow|mercantile|mgrs|pyproj|requests|packaging)"